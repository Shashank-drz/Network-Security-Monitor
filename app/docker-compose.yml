services:
  loki:
    image: grafana/loki:3.0.0
    container_name: netmon-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    volumes:
      - ./loki:/etc/loki
      - loki-data:/loki
    networks:
      - netmon
    restart: unless-stopped
    stop_grace_period: 30s
    mem_limit: 512m

  promtail:
    image: grafana/promtail:3.0.0
    container_name: netmon-promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - ./findings:/findings:ro
      - ./logs/suricata:/var/log/suricata:ro
    command: -config.file=/etc/promtail/config.yml -config.expand-env=true
    depends_on:
      - loki
    networks:
      - netmon
    restart: unless-stopped
    stop_grace_period: 30s
    mem_limit: 128m

  grafana:
    image: grafana/grafana:10.2.0
    container_name: netmon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=NSMadmin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - loki
    networks:
      - netmon
    restart: unless-stopped
    stop_grace_period: 30s
    mem_limit: 256m

  suricata:
    image: jasonish/suricata:latest
    container_name: netmon-suricata
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    volumes:
      - ./pcaps:/pcaps:ro
      - ./logs/suricata:/var/log/suricata
    command: -c "suricata-update --no-reload; > /var/log/suricata/eve.json; while true; do if ls /pcaps/*.pcap >/dev/null 2>&1; then echo 'Processing PCAPs...'; suricata -k none -c /etc/suricata/suricata.yaml -l /var/log/suricata -r /pcaps/*.pcap; else echo 'No PCAP files; sleeping 10s...'; fi; sleep 10; done" 
    restart: unless-stopped
    stop_grace_period: 30s
    networks:
      - netmon
    mem_limit: 1g
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/log/suricata/eve.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  correlation-engine:
    build:
      context: ./corr-engine
      dockerfile: Dockerfile
    container_name: netmon-corr-engine
    depends_on:
      suricata:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./logs/suricata:/var/log/suricata:ro
      - ./corr-engine/rules:/rules:ro
      - ./findings:/findings
    entrypoint: ["/bin/sh", "-c"]
    command: ["truncate -s 0 /findings/findings.json && exec ./build/corr_engine /rules/rules.yaml /var/log/suricata/eve.json /findings/findings.json"]
    restart: unless-stopped
    stop_grace_period: 30s
    networks:
      - netmon
    mem_limit: 256m
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep corr_engine | grep -v grep || test -f /findings/findings.json"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 90s

volumes:
  loki-data:
  grafana-data:

networks:
  netmon:
    driver: bridge

