
services:
  suricata:
    image: jasonish/suricata:latest
    container_name: netmon-suricata
    volumes:
      - ./pcaps:/pcaps:ro
      - ./logs/suricata:/var/log/suricata
      # Uncomment and create ./suricata/rules if you later add custom rule sets:
      # - ./suricata/rules:/var/lib/suricata/rules:ro
    command: sh -c "suricata-update && suricata -r /pcaps --pcap-file-continuous -l /var/log/suricata"
    restart: unless-stopped
    networks:
      - netmon
    mem_limit: 1g
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/log/suricata/eve.json || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 30s

  correlation-engine:
    build:
      context: ./corr-engine
      dockerfile: Dockerfile
    container_name: netmon-corr-engine
    depends_on:
      suricata:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./logs/suricata:/var/log/suricata:ro
      - ./corr-engine/rules:/rules:ro
      - ./findings:/findings
    # Current Dockerfile builds to ./build/corr_engine inside /app
    command: ["./build/corr_engine", "/rules/rules.yaml", "/var/log/suricata", "/findings"]
    restart: unless-stopped
    networks:
      - netmon
    mem_limit: 256m
    healthcheck:
      test: ["CMD-SHELL", "test -s /findings/findings.json || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 40s

  promtail:
    image: grafana/promtail:latest
    container_name: netmon-promtail
    depends_on:
      - loki
      - correlation-engine
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - ./findings:/findings:ro
      - ./logs/suricata:/var/log/suricata:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - netmon
    mem_limit: 256m

  loki:
    image: grafana/loki:2.9.0
    container_name: netmon-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - netmon
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana:latest
    container_name: netmon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=NSMadmin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel,grafana-clock-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - netmon
    mem_limit: 512m
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 30s

networks:
  netmon:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local
