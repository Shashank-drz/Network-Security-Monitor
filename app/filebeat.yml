filebeat.modules:
  - module: suricata
    eve:
      enabled: true
      var.paths: ["/var/log/suricata/eve.json"] # Path inside Filebeat container

  # Add Zeek module later if you include Zeek
  # - module: zeek
  #   conn:
  #     enabled: true
  #     var.paths: ["/usr/local/zeek/logs/conn.log"] # Example
  # Add other Zeek logs as needed (dns, http, notice, weird)

filebeat.inputs:
  # Input for your C++ Correlation Engine findings
  # Assuming your corr-engine writes JSON findings to a file in a mounted volume
  - type: log
    enabled: true # Set to true once corr-engine writes to this file
    paths:
      - /var/log/corr_engine_output/findings.json # Path inside Filebeat container
    json.keys_under_root: true
    json.add_error_key: true
    tags: ["correlation_engine", "findings"]
    # If your corr-engine logs to stdout and you configure Docker logging + Filebeat Docker input:
    # - type: container
    #   paths:
    #     - '/var/lib/docker/containers/${data.docker.container.id}/*.log'
    #   matchers:
    #     - equals:
    #         docker.container.labels.compose_service: "corr-engine" # Ensure your corr-engine service has this label
    #   json.keys_under_root: true
    #   json.add_error_key: true
    #   tags: ["correlation_engine", "findings"]


# If you are using Kibana and want Filebeat to set up dashboards (optional):
setup.kibana:
  host: "kibana:5601" # Service name from docker-compose

output.elasticsearch:
  hosts: ["elasticsearch:9200"] # Service name from docker-compose
  indices:
    - index: "suricata-alerts-%{+yyyy.MM.dd}"
      when.contains:
        event.module: "suricata"
    - index: "correlation-findings-%{+yyyy.MM.dd}"
      when.contains:
        tags: "findings"
    # Add index routing for Zeek if used
    # - index: "zeek-conn-%{+yyyy.MM.dd}"
    #   when.contains:
    #     event.dataset: "zeek.conn"
    - index: "filebeat-%{[agent.version]}-%{+yyyy.MM.dd}" # Default fallback
